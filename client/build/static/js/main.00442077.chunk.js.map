{"version":3,"sources":["components/api-client.js","components/authcontext.js","components/itemtable/itemtable.js","components/inventory/inventory.js","components/authbutton.js","components/header.js","components/character-table.js","App.js","reportWebVitals.js","index.js"],"names":["ApiClient","axios","create","baseURL","AuthContext","React","createContext","tableIcons","Add","forwardRef","props","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","ItemTable","useState","data","setData","iserror","setIserror","errorMessages","setErrorMessages","useEffect","get","then","res","catch","error","columns","title","field","hidden","type","Consumer","loggedIn","className","Grid","container","spacing","item","xs","sm","Alert","severity","map","msg","i","icons","editable","onRowUpdate","newData","oldData","Promise","resolve","errorList","undefined","name","push","rarity","cost","length","patch","id","dataUpdate","tableData","handleRowUpdate","onRowAdd","post","dataToAdd","handleRowAdd","onRowDelete","delete","dataDelete","index","splice","handleRowDelete","options","actionsColumnIndex","useStyles","makeStyles","theme","root","height","top","display","flexDirection","mergecard","gold","paddingTop","InventoryTable","classes","consumed","setConsumed","items","setItems","characters","setCharacters","selectedItem","setSelectedItem","selectedCharacter","setSelectedCharacter","costTotal","setCostTotal","updateItems","tempConsumed","tempOwned","owned","ownedCost","reduce","a","b","Item","count","consumedCost","Number","sumCost","onCharAutofillChange","event","values","removeItem","consume","character_id","payload","item_id","endpoint","headers","authorization","window","localStorage","getItem","Object","keys","constructor","mounted","md","Card","CardContent","Autocomplete","value","getOptionLabel","option","onChange","renderInput","params","TextField","label","variant","Typography","Name","Button","onClick","ID","actions","icon","tooltip","rowData","jwt","require","AuthButton","setLoggedIn","useContext","token","decodedToken","decode","complete","dateNow","Date","exp","getTime","onFailure","response","console","log","onLoginSuccess","setItem","tokenObj","id_token","refreshTiming","expires_in","refreshToken","reloadAuthResponse","newAuthRes","setTimeout","refreshTokenSetup","onLogoutSuccess","clientId","buttonText","onSuccess","cookiePolicy","isSignedIn","flexGrow","Header","AppBar","position","Toolbar","CharacterTable","search","createMuiTheme","palette","App","setValue","handleChange","newValue","TabPanel","children","other","Box","p","ThemeProvider","CssBaseline","Container","Tabs","Tab","disabled","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","AppWrapper","Provider","StrictMode","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.00442077.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport const ApiClient = axios.create({\n  // Production\n  baseURL: 'https://handy-haversack.herokuapp.com/api/',\n  \n  // Development\n  // baseURL: 'http://localhost:8080/api/',\n});\n\nexport default ApiClient","import React from 'react'\n\nconst AuthContext = React.createContext(null);\n\nexport default AuthContext","import React, { useState, useEffect } from 'react';\nimport { forwardRef } from 'react';\nimport Grid from '@material-ui/core/Grid'\n\nimport MaterialTable from \"material-table\";\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\n\nimport ApiClient from '../api-client'\nimport Alert from '@material-ui/lab/Alert';\nimport AuthContext from '../authcontext'\n\nconst tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n};\n\n\nexport default function ItemTable() {\n\n    const [data, setData] = useState([]); //table data\n\n    //for error handling\n    const [iserror, setIserror] = useState(false)\n    const [errorMessages, setErrorMessages] = useState([])\n\n    const handleRowAdd = (newData, resolve) => {\n        //validation\n        let errorList = []\n        if (newData.name === undefined) {\n            errorList.push(\"Please enter item name\")\n        } if (newData.type === undefined) {\n            errorList.push(\"Please enter item type\")\n        } if (newData.rarity === undefined) {\n            errorList.push(\"Please enter rarity\")\n        } if (newData.cost === undefined || newData.cost < 0) {\n            errorList.push(\"Please enter a proper cost\")\n        } if (errorList.length < 1) { //no error\n            ApiClient.post(\"/items\", newData)\n                .then(res => {\n                    let dataToAdd = [...data];\n                    newData.id = res.data.data.id\n                    dataToAdd.push(newData);\n                    setData(dataToAdd);\n                    setErrorMessages([])\n                    setIserror(false)\n                })\n                .catch(error => {\n                    setErrorMessages([\"Cannot add data. Server error!\"])\n                    setIserror(true)\n                })\n        } else {\n            setErrorMessages(errorList)\n            setIserror(true)\n        }\n    }\n\n    const handleRowDelete = (oldData, resolve) => {\n        ApiClient.delete(\"/items/\" + oldData.id)\n            .then(res => {\n                const dataDelete = [...data];\n                const index = oldData.tableData.id;\n                dataDelete.splice(index, 1);\n                setData([...dataDelete]);\n            })\n            .catch(error => {\n                setErrorMessages([\"Delete failed! Server error\"])\n                setIserror(true)\n            })\n    }\n\n    const handleRowUpdate = (newData, oldData, resolve) => {  //validation\n        let errorList = []\n        if (newData.name === undefined) {\n            errorList.push(\"Please enter item name\")\n        } if (newData.type === undefined) {\n            errorList.push(\"Please enter item type\")\n        } if (newData.rarity === undefined) {\n            errorList.push(\"Please enter rarity\")\n        } if (newData.cost === undefined || newData.cost < 0) {\n            errorList.push(\"Please enter a proper cost\")\n        }\n\n        if (errorList.length < 1) {\n            ApiClient.patch(\"/items/\" + newData.id, newData)\n                .then(res => {\n                    const dataUpdate = [...data];\n                    const index = oldData.tableData.id;\n                    dataUpdate[index] = newData;\n                    setData([...dataUpdate]);\n                    setIserror(false)\n                    setErrorMessages([])\n                })\n                .catch(error => {\n                    setErrorMessages([\"Update failed! Server error\"])\n                    setIserror(true)\n                })\n        } else {\n            setErrorMessages(errorList)\n            setIserror(true)\n        }\n    }\n\n\n    useEffect(() => {\n        ApiClient.get(\"/items\")\n            .then(res => {\n                setData(res.data.data)\n            })\n            .catch(error => {\n                setErrorMessages([\"Cannot load item data\", error.error])\n                setIserror(true)\n            })\n    }, [])\n\n    var columns = [\n        { title: \"id\", field: \"id\", hidden: true },\n        { title: \"Item name\", field: \"name\" },\n        { title: \"Type\", field: \"type\" },\n        { title: \"Rarity\", field: \"rarity\" },\n        { title: \"Cost\", field: \"cost\", type: \"numeric\" }\n    ]\n\n    return (\n        <AuthContext.Consumer>\n            {({ loggedIn }) => (\n                <div className=\"App\">\n                    <Grid container spacing={1}>\n                        <Grid item xs={2}></Grid>\n                        <Grid item xs={12} sm={8}>\n                            <div>\n                                {iserror &&\n                                    <Alert severity=\"error\">\n                                        {errorMessages.map((msg, i) => {\n                                            return <div key={i}>{msg}</div>\n                                        })}\n                                    </Alert>\n                                }\n                            </div>\n                            <MaterialTable\n                                title=\"Defined Items\"\n                                columns={columns}\n                                data={data}\n                                icons={tableIcons}\n\n                                editable={{\n                                    onRowUpdate: loggedIn ? (newData, oldData) =>\n                                        new Promise((resolve) => {\n                                            handleRowUpdate(newData, oldData, resolve);\n                                            resolve()\n                                        }) : null,\n                                    onRowAdd: loggedIn ? (newData) =>\n                                        new Promise((resolve) => {\n                                            handleRowAdd(newData)\n                                            resolve()\n                                        }) : null,\n                                    onRowDelete: loggedIn ? (oldData) =>\n                                        new Promise((resolve) => {\n                                            handleRowDelete(oldData, resolve)\n                                            resolve()\n                                        }) : null,\n                                }}\n                                options={{\n                                    actionsColumnIndex: -1\n                                }}\n                            />\n                        </Grid>\n                        <Grid item xs={3}></Grid>\n                    </Grid >\n                </div >\n            )}\n        </AuthContext.Consumer>\n    )\n}","import React, { useState, useEffect } from 'react';\nimport { forwardRef } from 'react';\nimport Grid from '@material-ui/core/Grid'\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport MaterialTable from \"material-table\";\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport EmojiFoodBeverageIcon from '@material-ui/icons/EmojiFoodBeverage';\n\nimport ApiClient from '../api-client'\nimport Alert from '@material-ui/lab/Alert';\nimport { Button, Card, CardContent, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        height: \"100%\",\n    },\n    top: {\n        display: \"flex\",\n        flexDirection: \"row\"\n    },\n    mergecard: {\n        flexDirection: \"column\",\n        height: \"100%\",\n    },\n    gold: {\n        paddingTop: '10px',\n    }\n}));\n\n\nexport default function InventoryTable() {\n\n    const classes = useStyles();\n\n    const [data, setData] = useState([]); //table data\n    const [consumed, setConsumed] = useState([]); //table data\n    const [items, setItems] = useState([])    // Item data for predicting item fill\n    const [characters, setCharacters] = useState([])\n    const [selectedItem, setSelectedItem] = useState({})\n    const [selectedCharacter, setSelectedCharacter] = useState({})\n    const [costTotal, setCostTotal] = useState([])\n\n    //for error handling\n    const [iserror, setIserror] = useState(false)\n    const [errorMessages, setErrorMessages] = useState([])\n\n    const sumCost = (owned, consumed) => {\n        var ownedCost = [owned.reduce((a, b) => a + (b.Item.cost * b.count || 0), 0)]\n        var consumedCost = [consumed.reduce((a, b) => a + (b.Item.cost * b.count || 0), 0)]\n        setCostTotal(Number(ownedCost) + Number(consumedCost) / 2)\n    }\n\n    // updateItems takes the full inventory returned from the backend and\n    // splits it between items currently owned (data) and items consumed (consumed)\n    const updateItems = (items) => {\n        var tempConsumed = []\n        var tempOwned = []\n        for (var i = 0; i < items.length; i++) {\n            var item = items[i]\n            if (item.consumed) {\n                tempConsumed.push(item)\n            } else {\n                tempOwned.push(item)\n            }\n        }\n        setData(tempOwned)\n        setConsumed(tempConsumed)\n        sumCost(tempOwned, tempConsumed)\n    }\n\n    const buyItem = () => {\n        if (Object.keys(selectedItem).length === 0 && selectedItem.constructor === Object) {\n            setErrorMessages([\"Please Select an Item\"])\n            setIserror(true)\n            return\n        }\n        if (Object.keys(selectedCharacter).length === 0 && selectedCharacter.constructor === Object) {\n            setErrorMessages([\"Please Select a Character\"])\n            setIserror(true)\n            return\n        }\n        // No object has been selected yet.\n        var payload = {\n            \"character_id\": selectedCharacter.id,\n            \"item_id\": selectedItem.ID\n        }\n        // Purchase the selected item\n        ApiClient.post(\"/buy/\", payload, {\n            headers: {\n                authorization: \"bearer \" + window.localStorage.getItem('authToken')\n            }\n        })\n            .then(res => {\n                updateItems(res.data.data)\n                setIserror(false)\n            }).catch(error => {\n                setErrorMessages([\"Cannot purchase Item\"])\n                setIserror(true)\n            })\n    }\n\n    const onItemAutofillChange = (event, values) => {\n        setSelectedItem(values)\n    }\n\n    const onCharAutofillChange = async (event, values) => {\n        setSelectedCharacter(values)\n    }\n\n    const getItemNames = () => {\n        ApiClient.get(\"/names/\")\n            .then(res => {\n                setItems(res.data.items)\n            })\n            .catch(error => {\n                setErrorMessages([\"Cannot load item names\"])\n                setIserror(true)\n            })\n    }\n\n    const getCharacters = () => {\n        ApiClient.get(\"/characters/\", {\n            headers: {\n                authorization: \"bearer \" + window.localStorage.getItem('authToken')\n            }\n        })\n            .then(res => {\n                setCharacters(res.data.data)\n                setSelectedCharacter(res.data.data[0])\n            })\n            .catch(error => {\n                setErrorMessages([\"Cannot load character names\"])\n                setIserror(true)\n            })\n    }\n\n    // Handles selling an item\n    const removeItem = (oldData, consume) => {\n        // Inconsistency in data fromt the inventory and the selected character\n        if (oldData.character_id !== selectedCharacter.id) {\n            setErrorMessages([\"Delete failed! Character ID doesn't match Inventory ID\"])\n            setIserror(true)\n            return\n        }\n        var payload = {\n            \"character_id\": oldData.character_id,\n            \"item_id\": oldData.item_id\n        }\n        // What endpoint should we post to\n        var endpoint = \"\"\n        if (consume === true) {\n            endpoint = \"/consume/\"\n        } else {\n            endpoint = \"/sell/\"\n        }\n        ApiClient.post(endpoint, payload, {\n            headers: {\n                authorization: \"bearer \" + window.localStorage.getItem('authToken')\n            }\n        })\n            .then(res => {\n                if (consume) {\n                    updateItems(res.data.data)\n                    setIserror(false)\n                } else {\n                    const dataDelete = [...data];\n                    oldData.count--\n                    if (oldData.count === 0) {\n                        const index = oldData.tableData.id;\n                        dataDelete.splice(index, 1);\n                        updateItems([...dataDelete]);\n                    }\n                }\n            })\n            .catch(error => {\n                setErrorMessages([\"Delete failed! Server error\", error.error])\n                setIserror(true)\n            })\n    }\n\n    useEffect(() => {\n        if (selectedCharacter == null || (Object.keys(selectedCharacter).length === 0 && selectedCharacter.constructor === Object)) {\n            setErrorMessages([\"Please Select a Character\"])\n            setIserror(true)\n            return\n        }\n        ApiClient.get(\"/inventory/\" + selectedCharacter.id, {\n            headers: {\n                authorization: \"bearer \" + window.localStorage.getItem('authToken')\n            }\n        })\n            .then(res => {\n                updateItems(res.data.data)\n            })\n            .catch(error => {\n                setErrorMessages([\"Cannot load inventory data\"])\n                setIserror(true)\n            })\n    }, [selectedCharacter])\n    useEffect(() => {\n        let mounted = true\n        if (mounted) {\n            setIserror(false)\n        }\n        setErrorMessages([])\n        // Get item names for use in the purchase dropdown\n        getItemNames()\n        // Get the characters\n        getCharacters()\n        return () => mounted = false;\n    }, [])\n\n    var columns = [\n        { title: \"id\", field: \"id\", hidden: true },\n        { title: \"user_id\", field: \"user_id\", hidden: true },\n        { title: \"item_id\", field: \"user_id\", hidden: true },\n        { title: \"Item Name\", field: \"Item.name\" },\n        { title: \"Cost\", field: \"Item.cost\", type: \"numeric\" },\n        { title: \"Count\", field: \"count\", type: \"numeric\" }\n    ]\n\n    return (\n        <div className=\"App\">\n            <Grid container spacing={1}>\n                <Grid item sm={12} md={2} />\n                <Grid item xs={12} sm={6} md={4}>\n                    <Card className={classes.mergecard}>\n                        <CardContent>\n                            <Autocomplete\n                                id=\"character-selection\"\n                                value={selectedCharacter}\n                                options={characters}\n                                getOptionLabel={(option) => option.name}\n                                onChange={onCharAutofillChange}\n                                renderInput={(params) => <TextField {...params} label=\"Character\" variant=\"outlined\" />}\n                            />\n                            <Typography variant=\"h5\" className={classes.gold}>\n                                Inventory Cost: {costTotal} gp\n                            </Typography>\n                        </CardContent>\n                    </Card>\n                </Grid>\n                <Grid item xs={12} sm={6} md={4}>\n                    <Card className={classes.root}>\n                        <CardContent>\n                            <Grid container spacing={2}>\n                                <Grid item xs={12} sm={12} md={7}>\n                                    <Autocomplete\n                                        id=\"purchase-selection\"\n                                        options={items}\n                                        getOptionLabel={(option) => option.Name}\n                                        onChange={onItemAutofillChange}\n                                        renderInput={(params) => <TextField {...params} label=\"Item to purchase\" variant=\"outlined\" />}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={12} md={5}>\n                                    <Button variant=\"contained\"\n                                        onClick={buyItem}>\n                                        Purchase\n                                </Button>\n                                </Grid>\n                            </Grid>\n                        </CardContent>\n                    </Card>\n                </Grid>\n                <Grid item sm={1} />\n                <Grid item sm={1} md={2} />\n                <Grid item sm={12} md={8}>\n                    <div>\n                        {iserror &&\n                            <Alert severity=\"error\">\n                                {errorMessages.map((msg, i) => {\n                                    return <div key={i}>{msg}</div>\n                                })}\n                            </Alert>\n                        }\n                    </div>\n                    <MaterialTable\n                        title=\"Items Owned\"\n                        columns={columns}\n                        data={data}\n                        // icons={tableIcons}\n                        editable={{\n                            onRowDelete: (oldData) =>\n                                new Promise((resolve) => {\n                                    removeItem(oldData, false)\n                                    resolve()\n                                }),\n                        }}\n                        actions={[\n                            {\n                                icon: 'emoji_food_beverage',\n                                tooltip: 'Consume Item',\n                                onClick: (event, rowData) => new Promise((resolve) => {\n                                    removeItem(rowData, true)\n                                    resolve()\n                                }),\n                            }\n                        ]}\n                        options={{\n                            actionsColumnIndex: -1\n                        }}\n                    />\n                </Grid>\n                <Grid item xs={1}></Grid>\n                <Grid item sm={1} md={2} />\n                <Grid item sm={12} md={8}>\n                    <MaterialTable\n                        title=\"Items Consumed\"\n                        columns={columns}\n                        data={consumed}\n                        options={{\n                            actionsColumnIndex: -1\n                        }}\n                    />\n                </Grid>\n            </Grid >\n        </div >\n    )\n}","import React, { useContext, useEffect } from 'react';\nimport AuthContext from './authcontext.js'\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\n\nvar jwt = require('jsonwebtoken');\n\nfunction AuthButton() {\n\n    const { setLoggedIn } = useContext(AuthContext)\n    useEffect(() => {\n        let mounted = true;\n        const token = localStorage.getItem('authToken');\n        if (token === null) {\n            if (mounted) {\n                setLoggedIn(false)\n            }\n            return () => mounted = false;\n        }\n        var decodedToken = jwt.decode(token, { complete: true })\n        var dateNow = new Date();\n\n        if (decodedToken.exp < dateNow.getTime()) {\n            if (mounted) {\n                setLoggedIn(true)\n            }\n        }\n        return () => mounted = false;\n    }, [setLoggedIn])\n\n    const refreshTokenSetup = (res) => {\n        // Timing to renew access token\n        let refreshTiming = (res.tokenObj.expires_in || 3600 - 5 * 60) * 1000;\n\n        const refreshToken = async () => {\n            const newAuthRes = await res.reloadAuthResponse();\n            refreshTiming = (newAuthRes.expires_in || 3600 - 5 * 60) * 1000;\n            // saveUserToken(newAuthRes.access_token);  <-- save new token\n            localStorage.setItem('authToken', newAuthRes.id_token);\n\n            // Setup the other timer after the first one\n            setTimeout(refreshToken, refreshTiming);\n        };\n\n        // Setup first refresh timer\n        setTimeout(refreshToken, refreshTiming);\n    };\n\n    const onFailure = (response) => {\n        console.log(response);\n    }\n\n    const onLoginSuccess = (response) => {\n        window.localStorage.setItem('authToken', response.tokenObj.id_token);\n        refreshTokenSetup(response);\n        setLoggedIn(true)\n    }\n\n    const onLogoutSuccess = (response) => {\n        window.localStorage.removeItem('authToken')\n        setLoggedIn(false)\n    }\n    return (\n        <AuthContext.Consumer>\n            {({ loggedIn }) => (\n                <div>\n                    { loggedIn ?\n                        <GoogleLogout\n                            clientId=\"1090301103642-op1uhu99i3naegpk86siaqqf4nddn0c1.apps.googleusercontent.com\"\n                            buttonText='Logout'\n                            onLogoutSuccess={onLogoutSuccess}\n                            onFailure={onFailure}\n                            theme=\"dark\"\n                        />\n                        : <GoogleLogin\n                            clientId=\"1090301103642-op1uhu99i3naegpk86siaqqf4nddn0c1.apps.googleusercontent.com\"\n                            buttonText=\"Login\"\n                            onSuccess={onLoginSuccess}\n                            onFailure={onFailure}\n                            cookiePolicy={'single_host_origin'}\n                            isSignedIn={true}\n                            theme=\"dark\"\n                        />\n                    }\n                </div>\n            )}\n        </AuthContext.Consumer>\n    )\n\n\n\n}\n\nexport default AuthButton;","import { AppBar, Toolbar, Typography } from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport AuthButton from \"./authbutton\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    title: {\n        flexGrow: 1,\n    },\n}));\n\nexport default function Header() {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        Bag of Holding\n                    </Typography>\n                    <AuthButton />\n                </Toolbar>\n            </AppBar>\n        </div>\n    )\n}\n","import React, { useState, useEffect } from 'react';\nimport { forwardRef } from 'react';\nimport Grid from '@material-ui/core/Grid'\n\nimport MaterialTable from \"material-table\";\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\n\nimport ApiClient from './api-client'\nimport Alert from '@material-ui/lab/Alert';\n\nconst tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n};\n\n\nexport default function CharacterTable() {\n    const [data, setData] = useState([]); //table data\n\n    //for error handling\n    const [iserror, setIserror] = useState(false)\n    const [errorMessages, setErrorMessages] = useState([])\n\n    const handleRowAdd = (newData, resolve) => {\n        //validation\n        let errorList = []\n        if (newData.name === undefined) {\n            errorList.push(\"Please enter character name\")\n        } if (errorList.length < 1) { //no error\n            ApiClient.post(\"/characters/\", newData, {\n                headers: {\n                    authorization: \"bearer \" + window.localStorage.getItem('authToken')\n                }\n            })\n                .then(res => {\n                    let dataToAdd = [...data];\n                    newData.id = res.data.data.id\n                    dataToAdd.push(newData);\n                    setData(dataToAdd);\n                    setErrorMessages([])\n                    setIserror(false)\n                })\n                .catch(error => {\n                    setErrorMessages([\"Cannot add data. Server error!\"])\n                    setIserror(true)\n                })\n        } else {\n            setErrorMessages(errorList)\n            setIserror(true)\n        }\n    }\n\n    const handleRowDelete = (oldData, resolve) => {\n        ApiClient.delete(\"/characters/\" + oldData.id, {\n            headers: {\n                authorization: \"bearer \" + window.localStorage.getItem('authToken')\n            }\n        })\n            .then(res => {\n                const dataDelete = [...data];\n                const index = oldData.tableData.id;\n                dataDelete.splice(index, 1);\n                setData([...dataDelete]);\n            })\n            .catch(error => {\n                setErrorMessages([\"Delete failed! Server error\"])\n                setIserror(true)\n            })\n    }\n\n    useEffect(() => {\n        ApiClient.get(\"/characters/\", {\n            headers: {\n                authorization: \"bearer \" + window.localStorage.getItem('authToken')\n            }\n        })\n            .then(res => {\n                setData(res.data.data)\n            })\n            .catch(error => {\n                setErrorMessages([\"Cannot load character data\"])\n                setIserror(true)\n            })\n    }, [])\n\n    var columns = [\n        { title: \"id\", field: \"id\", hidden: true },\n        { title: \"Character name\", field: \"name\" },\n    ]\n\n    return (\n        <div className=\"App\">\n            <Grid container spacing={1}>\n                <Grid item xs={2}></Grid>\n                <Grid item xs={12} sm={8}>\n                    <div>\n                        {iserror &&\n                            <Alert severity=\"error\">\n                                {errorMessages.map((msg, i) => {\n                                    return <div key={i}>{msg}</div>\n                                })}\n                            </Alert>\n                        }\n                    </div>\n                    <MaterialTable\n                        title=\"Your Characters\"\n                        columns={columns}\n                        data={data}\n                        icons={tableIcons}\n\n                        editable={{\n                            onRowAdd: (newData) =>\n                                new Promise((resolve) => {\n                                    handleRowAdd(newData)\n                                    resolve()\n                                }),\n                            onRowDelete: (oldData) =>\n                                new Promise((resolve) => {\n                                    handleRowDelete(oldData, resolve)\n                                    resolve()\n                                }),\n                        }}\n                        options={{\n                            actionsColumnIndex: -1,\n                            search: false\n                        }}\n                    />\n                </Grid>\n                <Grid item xs={3}>\n                    \n                </Grid>\n            </Grid >\n        </div >\n    )\n}","import React from 'react';\nimport { Box, Tabs, Tab, Container, CssBaseline, ThemeProvider } from '@material-ui/core';\nimport ItemTable from './components/itemtable/itemtable';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport InventoryTable from './components/inventory/inventory';\nimport Header from './components/header'\nimport CharacterTable from './components/character-table';\nimport AuthContext from './components/authcontext'\n\nconst theme = createMuiTheme({\n    palette: {\n        type: 'dark',\n    },\n});\n\nexport default function App() {\n\n    const [value, setValue] = React.useState(0);\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    function TabPanel(props) {\n        const { children, value, index, ...other } = props; return (\n            <div {...other}>\n                {value === index && <Box p={3}>{children}</Box>}\n            </div>\n        );\n    }\n    return (\n\n        <ThemeProvider theme={theme}>\n            <CssBaseline />\n            <Header />\n            <Container>\n                <AuthContext.Consumer>\n                    {({ loggedIn}) => (\n                        <Tabs value={value} onChange={handleChange}>\n                            <Tab label=\"Items\" />\n                            <Tab label=\"Inventory\" disabled={!loggedIn} />\n                            <Tab label=\"Characters\" disabled={!loggedIn} />\n                        </Tabs>\n                    )}\n                </AuthContext.Consumer>\n            </Container>\n            <TabPanel value={value} index={0}>\n                <ItemTable></ItemTable>\n            </TabPanel>\n            <TabPanel value={value} index={1}>\n                <InventoryTable></InventoryTable>\n            </TabPanel>\n            <TabPanel value={value} index={2}>\n                <CharacterTable />\n            </TabPanel>\n        </ThemeProvider>\n    )\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useState } from 'react'\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport AuthContext from './components/authcontext'\n\nconst AppWrapper = () => {\n  const [loggedIn, setLoggedIn] = useState(false)\n\n  return (\n    <AuthContext.Provider value={{ loggedIn, setLoggedIn }}>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </AuthContext.Provider>\n  )\n}\n\nReactDOM.render(\n  <AppWrapper />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}