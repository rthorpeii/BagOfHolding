{"version":3,"sources":["components/itemtable/itemtable.js","components/inventory/inventory.js","components/authcontext.js","components/authbutton.js","components/header.js","components/character-table.js","App.js","reportWebVitals.js","index.js"],"names":["api","axios","create","baseURL","tableIcons","Add","forwardRef","props","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","ItemTable","useState","data","setData","iserror","setIserror","errorMessages","setErrorMessages","useEffect","get","headers","authorization","window","localStorage","getItem","then","res","catch","error","className","Grid","container","spacing","item","xs","Alert","severity","map","msg","i","title","columns","field","hidden","type","icons","editable","onRowUpdate","newData","oldData","Promise","resolve","errorList","undefined","name","push","rarity","cost","length","patch","id","dataUpdate","tableData","handleRowUpdate","onRowAdd","post","dataToAdd","handleRowAdd","onRowDelete","delete","dataDelete","index","splice","handleRowDelete","options","actionsColumnIndex","useStyles","makeStyles","theme","root","details","display","flexDirection","mergecard","border","boxShadow","InventoryTable","classes","items","setItems","characters","setCharacters","selectedItem","setSelectedItem","selectedCharacter","setSelectedCharacter","costTotal","setCostTotal","sumCost","reduce","a","b","Item","count","onCharAutofillChange","event","values","console","log","Card","CardHeader","CardContent","Autocomplete","getOptionLabel","option","Name","style","width","onChange","renderInput","params","TextField","label","variant","Button","color","onClick","Object","keys","constructor","payload","ID","info","square","Typography","value","AuthContext","React","createContext","jwt","require","AuthButton","useContext","setLoggedIn","loggedIn","token","decodedToken","decode","complete","dateNow","Date","exp","getTime","responseGoogle","response","onLoginSuccess","setItem","tokenObj","id_token","refreshTiming","expires_in","refreshToken","reloadAuthResponse","newAuthRes","setTimeout","refreshTokenSetup","onLogoutSuccess","removeItem","Consumer","clientId","buttonText","onFailure","onSuccess","cookiePolicy","isSignedIn","flexGrow","Header","AppBar","position","Toolbar","CharacterTable","createMuiTheme","palette","App","setValue","TabPanel","children","other","Box","p","ThemeProvider","CssBaseline","Container","Tabs","newValue","aria-label","Tab","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","AppWrapper","Provider","StrictMode","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5cd58f70.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { forwardRef } from 'react';\nimport Grid from '@material-ui/core/Grid'\n\nimport MaterialTable from \"material-table\";\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\n\nimport axios from 'axios'\nimport Alert from '@material-ui/lab/Alert';\n\n\nconst api = axios.create({\n    baseURL: `http://localhost:8080/api`\n})\n// api.defaults.headers.common = {'Authorization': `bearer ${window.localStorage.getItem(\"authToken\")}`}\n\n\nconst tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n};\n\n\nexport default function ItemTable() {\n\n    const [data, setData] = useState([]); //table data\n\n    //for error handling\n    const [iserror, setIserror] = useState(false)\n    const [errorMessages, setErrorMessages] = useState([])\n\n    const handleRowAdd = (newData, resolve) => {\n        //validation\n        let errorList = []\n        if (newData.name === undefined) {\n            errorList.push(\"Please enter item name\")\n        } if (newData.type === undefined) {\n            errorList.push(\"Please enter item type\")\n        } if (newData.rarity === undefined) {\n            errorList.push(\"Please enter rarity\")\n        } if (newData.cost === undefined || newData.cost < 0) {\n            errorList.push(\"Please enter a proper cost\")\n        } if (errorList.length < 1) { //no error\n            api.post(\"/items\", newData)\n                .then(res => {\n                    let dataToAdd = [...data];\n                    newData.id = res.data.data.id\n                    dataToAdd.push(newData);\n                    setData(dataToAdd);\n                    setErrorMessages([])\n                    setIserror(false)\n                })\n                .catch(error => {\n                    setErrorMessages([\"Cannot add data. Server error!\"])\n                    setIserror(true)\n                })\n        } else {\n            setErrorMessages(errorList)\n            setIserror(true)\n        }\n    }\n\n    const handleRowDelete = (oldData, resolve) => {\n        api.delete(\"/items/\" + oldData.id)\n            .then(res => {\n                const dataDelete = [...data];\n                const index = oldData.tableData.id;\n                dataDelete.splice(index, 1);\n                setData([...dataDelete]);\n            })\n            .catch(error => {\n                setErrorMessages([\"Delete failed! Server error\"])\n                setIserror(true)\n            })\n    }\n\n    const handleRowUpdate = (newData, oldData, resolve) => {  //validation\n        let errorList = []\n        if (newData.name === undefined) {\n            errorList.push(\"Please enter item name\")\n        } if (newData.type === undefined) {\n            errorList.push(\"Please enter item type\")\n        } if (newData.rarity === undefined) {\n            errorList.push(\"Please enter rarity\")\n        } if (newData.cost === undefined || newData.cost < 0) {\n            errorList.push(\"Please enter a proper cost\")\n        }\n\n        if (errorList.length < 1) {\n            api.patch(\"/items/\" + newData.id, newData)\n                .then(res => {\n                    const dataUpdate = [...data];\n                    const index = oldData.tableData.id;\n                    dataUpdate[index] = newData;\n                    setData([...dataUpdate]);\n                    setIserror(false)\n                    setErrorMessages([])\n                })\n                .catch(error => {\n                    setErrorMessages([\"Update failed! Server error\"])\n                    setIserror(true)\n                })\n        } else {\n            setErrorMessages(errorList)\n            setIserror(true)\n        }\n    }\n\n\n    useEffect(() => {\n        api.get(\"/items\", {\n            headers: {\n                authorization: \"bearer \" + window.localStorage.getItem('authToken')\n            }\n        })\n            .then(res => {\n                setData(res.data.data)\n            })\n            .catch(error => {\n                setErrorMessages([\"Cannot load item data\"])\n                setIserror(true)\n            })\n    }, [])\n\n    var columns = [\n        { title: \"id\", field: \"id\", hidden: true },\n        { title: \"Item name\", field: \"name\" },\n        { title: \"Type\", field: \"type\" },\n        { title: \"Rarity\", field: \"rarity\" },\n        { title: \"Cost\", field: \"cost\", type: \"numeric\" }\n    ]\n\n    return (\n        <div className=\"App\">\n            <Grid container spacing={1}>\n                <Grid item xs={1}></Grid>\n                <Grid item xs={10}>\n                    <div>\n                        {iserror &&\n                            <Alert severity=\"error\">\n                                {errorMessages.map((msg, i) => {\n                                    return <div key={i}>{msg}</div>\n                                })}\n                            </Alert>\n                        }\n                    </div>\n                    <MaterialTable\n                        title=\"Defined Items\"\n                        columns={columns}\n                        data={data}\n                        icons={tableIcons}\n\n                        editable={{\n                            onRowUpdate: (newData, oldData) =>\n                                new Promise((resolve) => {\n                                    handleRowUpdate(newData, oldData, resolve);\n                                    resolve()\n                                }),\n                            onRowAdd: (newData) =>\n                                new Promise((resolve) => {\n                                    handleRowAdd(newData)\n                                    resolve()\n                                }),\n                            onRowDelete: (oldData) =>\n                                new Promise((resolve) => {\n                                    handleRowDelete(oldData, resolve)\n                                    resolve()\n                                }),\n                        }}\n                        options={{\n                            actionsColumnIndex: -1\n                        }}\n                    />\n                </Grid>\n                <Grid item xs={3}></Grid>\n            </Grid >\n        </div >\n    )\n}","import React, { useState, useEffect } from 'react';\nimport { forwardRef } from 'react';\nimport Grid from '@material-ui/core/Grid'\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport MaterialTable from \"material-table\";\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\n\nimport axios from 'axios'\nimport Alert from '@material-ui/lab/Alert';\nimport { Button, Card, CardContent, CardHeader, Typography } from '@material-ui/core';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nconst useStyles = makeStyles((theme) => ({\n    root: {\n    },\n    details: {\n        display: \"flex\",\n        flexDirection: \"row\",\n    },\n    mergecard: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        border: \"none\",\n        boxShadow: \"none\"\n    },\n}));\n\n\nconst api = axios.create({\n    baseURL: `http://localhost:8080/api`\n})\n\nconst tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n};\n\n\nexport default function InventoryTable() {\n\n    const classes = useStyles();\n\n    const [data, setData] = useState([]); //table data\n    const [items, setItems] = useState([])    // Item data for predicting item fill\n    const [characters, setCharacters] = useState([])\n    const [selectedItem, setSelectedItem] = useState({})\n    const [selectedCharacter, setSelectedCharacter] = useState({})\n    const [costTotal, setCostTotal] = useState([])\n\n    //for error handling\n    const [iserror, setIserror] = useState(false)\n    const [errorMessages, setErrorMessages] = useState([])\n\n    const sumCost = (items) => {\n        setCostTotal([items.reduce((a, b) => a + (b.Item.cost * b.count || 0), 0)])\n    }\n\n    const buyItem = () => {\n        \n        if (Object.keys(selectedItem).length === 0 && selectedItem.constructor === Object) {\n            setErrorMessages([\"Please Select an Item\"])\n            setIserror(true)\n            return\n        }\n        if (Object.keys(selectedCharacter).length === 0 && selectedCharacter.constructor === Object) {\n            setErrorMessages([\"Please Select a Character\"])\n            setIserror(true)\n            return\n        }\n        // No object has been selected yet.\n        var payload = {\n            \"character_id\": selectedCharacter.id,\n            \"item_id\": selectedItem.ID\n        }\n        // Purchase the selected item\n        api.post(\"/buy/\", payload, {\n            headers: {\n                authorization: \"bearer \" + window.localStorage.getItem('authToken')\n            }\n        })\n            .then(res => {\n                console.log(res)\n                setData(res.data.data)\n                setIserror(false)\n                sumCost(res.data.data)\n            }).catch(error => {\n                setErrorMessages([\"Cannot purchase Item\"])\n                setIserror(true)\n            })\n    }\n\n    const onItemAutofillChange = (event, values) => {\n        setSelectedItem(values)\n    }\n\n    const onCharAutofillChange = async (event, values) => {\n        console.log(\"Character selected: \", values)\n        setSelectedCharacter(values)\n    }\n\n    const getItemNames = () => {\n        api.get(\"/names/\")\n            .then(res => {\n                setItems(res.data.items)\n            })\n            .catch(error => {\n                setErrorMessages([\"Cannot load item names\"])\n                setIserror(true)\n            })\n    }\n\n    const getCharacters = () => {\n        api.get(\"/characters/\", {\n            headers: {\n                authorization: \"bearer \" + window.localStorage.getItem('authToken')\n            }\n        })\n            .then(res => {\n                setCharacters(res.data.data)\n                setSelectedCharacter(res.data.data[0])\n            })\n            .catch(error => {\n                setErrorMessages([\"Cannot load character names\"])\n                setIserror(true)\n            })\n    }\n\n    const getInventory = () => {\n        api.get(\"/inventory/\"+selectedCharacter.id, {\n            headers: {\n                authorization: \"bearer \" + window.localStorage.getItem('authToken')\n            }\n        })\n            .then(res => {\n                setData(res.data.data)\n                sumCost(res.data.data)\n            })\n            .catch(error => {\n                setErrorMessages([\"Cannot load inventory data\"])\n                setIserror(true)\n            })\n    }\n\n    const handleRowDelete = (oldData) => {\n        // No object has been selected yet.\n        var payload = {\n            \"character_id\": selectedCharacter.id,\n            \"item_id\": selectedItem.ID\n        }\n        api.post(\"/sell/\", payload, {\n            headers: {\n                authorization: \"bearer \" + window.localStorage.getItem('authToken')\n            }\n        })\n            .then(res => {\n                console.log(\"made it\")\n                const dataDelete = [...data];\n                oldData.count--\n                if (oldData.count === 0) {\n                    const index = oldData.tableData.id;\n                    dataDelete.splice(index, 1);\n                    setData([...dataDelete]);\n                }\n                console.log(\"Finished?\")\n                sumCost(dataDelete)\n            })\n            .catch(error => {\n                setErrorMessages([\"Delete failed! Server error\"])\n                setIserror(true)\n            })\n    }\n\n    useEffect(() => {\n        // Load the inventory Data\n        getInventory()\n    }, [selectedCharacter])\n    useEffect(() => {\n        // Get item names for use in the purchase dropdown\n        getItemNames()\n        // Get the characters\n        getCharacters()\n    }, [])\n\n    var columns = [\n        { title: \"id\", field: \"id\", hidden: true },\n        { title: \"user_id\", field: \"user_id\", hidden: true },\n        { title: \"item_id\", field: \"user_id\", hidden: true },\n        { title: \"Item Name\", field: \"Item.name\" },\n        { title: \"Cost\", field: \"Item.cost\", type: \"numeric\" },\n        { title: \"Count\", field: \"count\", type: \"numeric\" }\n    ]\n\n    return (\n        <div className=\"App\">\n            <Grid container spacing={3}>\n                <Grid item xs={2} />\n                <Grid item xs={4}>\n                    <Card className={classes.root}>\n                        <CardHeader title=\"Purchase an Item\" />\n                        <div className={classes.details}>\n                            <CardContent>\n                                <Autocomplete\n                                    id=\"purchase-selection\"\n                                    options={items}\n                                    getOptionLabel={(option) => option.Name}\n                                    style={{ width: 300 }}\n                                    onChange={onItemAutofillChange}\n                                    renderInput={(params) => <TextField {...params} label=\"Item to purchase\" variant=\"outlined\" />}\n                                />\n                            </CardContent>\n                            <CardContent>\n                                <Button variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={buyItem}>\n                                    Purchase\n                                </Button>\n                            </CardContent>\n                        </div>\n                    </Card>\n\n                </Grid>\n                <Grid item xs={4}>\n                    <div className={classes.info}>\n                        <Card className={classes.mergecard} square={true}>\n                            <CardHeader title=\"Inventory Cost:\" />\n                            <div className={classes.details}>\n                                <CardContent>\n                                    <Typography variant=\"h4\">{costTotal} gp</Typography>\n                                </CardContent>\n                            </div>\n                        </Card>\n                        <Card className={classes.mergecard} square={true}>\n                            <div className={classes.details}>\n                                <CardContent>\n                                    <Autocomplete\n                                        id=\"character-selection\"\n                                        value={selectedCharacter}\n                                        options={characters}\n                                        getOptionLabel={(option) => option.name}\n                                        style={{ width: 300 }}\n                                        onChange={onCharAutofillChange}\n                                        renderInput={(params) => <TextField {...params} label=\"Character\" variant=\"outlined\" />}\n                                    />\n                                </CardContent>\n                            </div>\n                        </Card>\n                    </div>\n                </Grid>\n                <Grid item xs={1} />\n                <Grid item xs={2} />\n                <Grid item xs={8}>\n                    <div>\n                        {iserror &&\n                            <Alert severity=\"error\">\n                                {errorMessages.map((msg, i) => {\n                                    return <div key={i}>{msg}</div>\n                                })}\n                            </Alert>\n                        }\n                    </div>\n                    <MaterialTable\n                        title=\"Items Owned\"\n                        columns={columns}\n                        data={data}\n                        icons={tableIcons}\n                        editable={{\n                            onRowDelete: (oldData) =>\n                                new Promise((resolve) => {\n                                    handleRowDelete(oldData)\n                                    resolve()\n                                }),\n                        }}\n                        options={{\n                            actionsColumnIndex: -1\n                        }}\n                    />\n                </Grid>\n                <Grid item xs={1}></Grid>\n            </Grid >\n        </div >\n    )\n}","import React from 'react'\n\nconst AuthContext = React.createContext(null);\n\nexport default AuthContext","import React, { useContext, useEffect } from 'react';\nimport AuthContext from './authcontext.js'\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\n\nvar jwt = require('jsonwebtoken');\n\nfunction AuthButton() {\n    const {loggedIn, setLoggedIn} = useContext(AuthContext)\n\n    useEffect(() => {\n        const token = localStorage.getItem('authToken');\n        if (token === null) {\n            setLoggedIn(false)\n            return\n        }\n        var decodedToken = jwt.decode(token, { complete: true })\n        var dateNow = new Date();\n\n        if (decodedToken.exp < dateNow.getTime()) {\n            setLoggedIn(true)\n        }\n    }, [])\n\n    const refreshTokenSetup = (res) => {\n        // Timing to renew access token\n        let refreshTiming = (res.tokenObj.expires_in || 3600 - 5 * 60) * 1000;\n\n        const refreshToken = async () => {\n            const newAuthRes = await res.reloadAuthResponse();\n            refreshTiming = (newAuthRes.expires_in || 3600 - 5 * 60) * 1000;\n            console.log('newAuthRes:', newAuthRes);\n            // saveUserToken(newAuthRes.access_token);  <-- save new token\n            localStorage.setItem('authToken', newAuthRes.id_token);\n\n            // Setup the other timer after the first one\n            setTimeout(refreshToken, refreshTiming);\n        };\n\n        // Setup first refresh timer\n        setTimeout(refreshToken, refreshTiming);\n    };\n\n    const responseGoogle = (response) => {\n        console.log(response);\n    }\n\n    const onLoginSuccess = (response) => {\n        // console.log(\"Success: \" + JSON.stringify(response))\n        window.localStorage.setItem('authToken', response.tokenObj.id_token);\n        refreshTokenSetup(response);\n        setLoggedIn(true)\n    }\n\n    const onLogoutSuccess = (response) => {\n        window.localStorage.removeItem('authToken')\n        setLoggedIn(false)\n    }\n    return (\n        <AuthContext.Consumer>\n            {({ loggedIn, setLoggedIn }) => (\n                <div>\n                    { loggedIn ?\n                        <GoogleLogout\n                            clientId=\"1090301103642-op1uhu99i3naegpk86siaqqf4nddn0c1.apps.googleusercontent.com\"\n                            buttonText='Logout'\n                            onLogoutSuccess={onLogoutSuccess}\n                            onFailure={responseGoogle}\n                            theme=\"dark\"\n                        />\n                        : <GoogleLogin\n                            clientId=\"1090301103642-op1uhu99i3naegpk86siaqqf4nddn0c1.apps.googleusercontent.com\"\n                            buttonText=\"Login\"\n                            onSuccess={onLoginSuccess}\n                            onFailure={responseGoogle}\n                            cookiePolicy={'single_host_origin'}\n                            isSignedIn={true}\n                            theme=\"dark\"\n                        />\n                    }\n                </div>\n            )}\n        </AuthContext.Consumer>\n    )\n\n\n\n}\n\nexport default AuthButton;","import { AppBar, Toolbar, Typography } from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport AuthButton from \"./authbutton\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    title: {\n        flexGrow: 1,\n    },\n}));\n\nexport default function Header() {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        Bag of Holding\n                    </Typography>\n                    <AuthButton />\n                </Toolbar>\n            </AppBar>\n        </div>\n    )\n}\n","import React, { useState, useEffect } from 'react';\nimport { forwardRef } from 'react';\nimport Grid from '@material-ui/core/Grid'\n\nimport MaterialTable from \"material-table\";\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\n\nimport axios from 'axios'\nimport Alert from '@material-ui/lab/Alert';\n\n\nconst api = axios.create({\n    baseURL: `http://localhost:8080/api`\n})\n\nconst tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n};\n\n\nexport default function CharacterTable() {\n    const [data, setData] = useState([]); //table data\n\n    //for error handling\n    const [iserror, setIserror] = useState(false)\n    const [errorMessages, setErrorMessages] = useState([])\n\n    const handleRowAdd = (newData, resolve) => {\n        //validation\n        let errorList = []\n        if (newData.name === undefined) {\n            errorList.push(\"Please enter character name\")\n        } if (errorList.length < 1) { //no error\n            api.post(\"/characters/\", newData, {\n                headers: {\n                    authorization: \"bearer \" + window.localStorage.getItem('authToken')\n                }\n            })\n                .then(res => {\n                    let dataToAdd = [...data];\n                    newData.id = res.data.data.id\n                    dataToAdd.push(newData);\n                    setData(dataToAdd);\n                    setErrorMessages([])\n                    setIserror(false)\n                })\n                .catch(error => {\n                    setErrorMessages([\"Cannot add data. Server error!\"])\n                    setIserror(true)\n                })\n        } else {\n            setErrorMessages(errorList)\n            setIserror(true)\n        }\n    }\n\n    const handleRowDelete = (oldData, resolve) => {\n        api.delete(\"/characters/\" + oldData.id, oldData, {\n            headers: {\n                authorization: \"bearer \" + window.localStorage.getItem('authToken')\n            }\n        })\n            .then(res => {\n                const dataDelete = [...data];\n                const index = oldData.tableData.id;\n                dataDelete.splice(index, 1);\n                setData([...dataDelete]);\n            })\n            .catch(error => {\n                setErrorMessages([\"Delete failed! Server error\"])\n                setIserror(true)\n            })\n    }\n\n    useEffect(() => {\n        api.get(\"/characters/\", {\n            headers: {\n                authorization: \"bearer \" + window.localStorage.getItem('authToken')\n            }\n        })\n            .then(res => {\n                setData(res.data.data)\n            })\n            .catch(error => {\n                setErrorMessages([\"Cannot load character data\"])\n                setIserror(true)\n            })\n    }, [])\n\n    var columns = [\n        { title: \"id\", field: \"id\", hidden: true },\n        { title: \"Character name\", field: \"name\" },\n    ]\n\n    return (\n        <div className=\"App\">\n            <Grid container spacing={1}>\n                <Grid item xs={1}></Grid>\n                <Grid item xs={10}>\n                    <div>\n                        {iserror &&\n                            <Alert severity=\"error\">\n                                {errorMessages.map((msg, i) => {\n                                    return <div key={i}>{msg}</div>\n                                })}\n                            </Alert>\n                        }\n                    </div>\n                    <MaterialTable\n                        title=\"Your Characters\"\n                        columns={columns}\n                        data={data}\n                        icons={tableIcons}\n\n                        editable={{\n                            onRowAdd: (newData) =>\n                                new Promise((resolve) => {\n                                    handleRowAdd(newData)\n                                    resolve()\n                                }),\n                            onRowDelete: (oldData) =>\n                                new Promise((resolve) => {\n                                    handleRowDelete(oldData, resolve)\n                                    resolve()\n                                }),\n                        }}\n                        options={{\n                            actionsColumnIndex: -1\n                        }}\n                    />\n                </Grid>\n                <Grid item xs={3}></Grid>\n            </Grid >\n        </div >\n    )\n}","import React from 'react';\nimport { Box, Tabs, Tab, Container, CssBaseline, ThemeProvider } from '@material-ui/core';\nimport ItemTable from './components/itemtable/itemtable';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport InventoryTable from './components/inventory/inventory';\nimport Header from './components/header'\nimport CharacterTable from './components/character-table';\n\nconst theme = createMuiTheme({\n    palette: {\n        type: 'dark',\n    },\n});\n\n\n\nexport default function App() {\n\n    const [value, setValue] = React.useState(0);\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    function TabPanel(props) {\n        const { children, value, index, ...other } = props; return (\n            <div {...other}>\n                {value === index && <Box p={3}>{children}</Box>}\n            </div>\n        );\n    }\n    return (\n\n        <ThemeProvider theme={theme}>\n            <CssBaseline />\n            <Header />\n            <Container>\n                <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\n                    <Tab label=\"Items\" />\n                    <Tab label=\"Inventory\" />\n                    <Tab label=\"Characters\" />\n                </Tabs>\n            </Container>\n            <TabPanel value={value} index={0}>\n                <ItemTable></ItemTable>\n            </TabPanel>\n            <TabPanel value={value} index={1}>\n                <InventoryTable></InventoryTable>\n            </TabPanel>\n            <TabPanel value={value} index={2}>\n                <CharacterTable/>\n            </TabPanel>\n        </ThemeProvider>\n    )\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useState } from 'react'\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport AuthContext from './components/authcontext'\n\nconst AppWrapper = () => {\n  const [loggedIn, setLoggedIn] = useState(false)\n\n  return (\n    <AuthContext.Provider value={{ loggedIn, setLoggedIn }}>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </AuthContext.Provider>\n  )\n}\n\nReactDOM.render(\n  <AppWrapper />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}