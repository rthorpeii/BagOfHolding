{"version":3,"sources":["components/authcontext.js","components/api-client.js","components/character-table.js","components/authbutton.js","components/header.js","components/inventory/character-card.js","components/inventory/consumed-table.js","components/inventory/buy-item-card.js","components/inventory/table.js","components/inventory/page.js","components/itemtable/toolbar.js","components/itemtable/itemtable.js","components/tab-bar.js","components/tab-panel.js","App.js","reportWebVitals.js","index.js"],"names":["AuthContext","createContext","ApiClient","axios","create","baseURL","headers","window","localStorage","getItem","CharacterTable","useState","characters","setCharacters","iserror","setIserror","errorMessages","setErrorMessages","useEffect","get","then","res","data","catch","error","className","Grid","container","spacing","item","xs","sm","Alert","severity","map","msg","i","title","columns","field","hidden","editable","onRowAdd","newData","Promise","resolve","newCharacter","undefined","name","post","concat","character","handleRowAdd","onRowDelete","oldData","delete","id","dataDelete","index","tableData","splice","handleRowDelete","options","actionsColumnIndex","paging","search","AuthButton","setLoggedIn","useContext","mounted","createAuthRefreshInterceptor","failedRequest","tokenRefreshResponse","setItem","token","defaults","Authorization","response","config","onFailure","console","log","onLoginSuccess","tokenObj","id_token","onLogoutSuccess","removeItem","Consumer","loggedIn","clientId","buttonText","render","renderProps","Button","variant","onClick","disabled","theme","onSuccess","cookiePolicy","isSignedIn","useStyles","makeStyles","root","flexGrow","Header","classes","AppBar","position","Typography","_","mergecard","flexDirection","height","costText","paddingTop","CharacterCard","props","costTotal","onChange","selected","setSelected","length","Autocomplete","value","getOptionLabel","option","renderInput","params","TextField","label","ConsumedTable","consumed","actions","icon","tooltip","rowData","onRemove","rowStyle","backgroundColor","outerCard","itemDropdown","paddingBottom","BuyItemCard","items","setItems","Name","buyItem","Table","owned","useTheme","palette","action","hover","InventoryPage","setOwned","setConsumed","setCharacter","setCostTotal","validateCharacter","constructor","Object","keys","cost","Columns","useMediaQuery","breakpoints","down","type","cellStyle","padding","headerStyle","Hidden","smDown","md","payload","ID","consume","character_id","item_id","paddingLeft","Toolbar","ItemTable","displayError","setDisplayError","display","gutterBottom","validate","editComponent","size","defaultValue","placeholder","e","target","onRowUpdate","errorList","push","rarity","isNaN","patch","dataUpdate","handleRowUpdate","newItem","filter","header","pageSize","pageSizeOptions","showTitle","components","TabBar","setValue","handleChange","newValue","Paper","square","Tabs","centered","Tab","TabPanel","children","other","Box","p","createMuiTheme","App","ThemeProvider","CssBaseline","shadows","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","AppWrapper","Provider","StrictMode","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.ee04cc7c.chunk.js","sourcesContent":["import {createContext} from 'react'\n\nconst AuthContext = createContext(null);\n\nexport default AuthContext","import axios from 'axios';\nvar USER_API = process.env.NODE_ENV === 'production' ? 'https://handy-haversack.herokuapp.com/api/' : 'http://localhost:8080/api/'\nexport const ApiClient = axios.create({\n  baseURL: USER_API,\n  headers: {'Authorization': \"Bearer \" + window.localStorage.getItem('authToken')}\n});\n\nexport default ApiClient","import Grid from '@material-ui/core/Grid'\nimport Alert from '@material-ui/lab/Alert';\nimport MaterialTable from \"@material-table/core\";\nimport { useState, useEffect } from 'react';\n\nimport ApiClient from './api-client'\n\nexport default function CharacterTable() {\n    const [characters, setCharacters] = useState([]);\n    const [iserror, setIserror] = useState(false)\n    const [errorMessages, setErrorMessages] = useState([])\n\n    const handleRowAdd = (newCharacter, resolve) => {\n        if (newCharacter.name === undefined) {\n            setErrorMessages([\"Please enter character name\"])\n            setIserror(true)\n            return\n        }\n        ApiClient.post(\"/characters/\", newCharacter)\n            .then(res => {\n                setCharacters(characters.concat(res.data.character));\n                setIserror(false)\n            })\n            .catch(error => {\n                setErrorMessages([\"Cannot add data. Server error!\" + error])\n                setIserror(true)\n            })\n    }\n\n    const handleRowDelete = (oldData, resolve) => {\n        ApiClient.delete(\"/characters/\" + oldData.id)\n            .then(res => {\n                const dataDelete = [...characters];\n                const index = oldData.tableData.id;\n                dataDelete.splice(index, 1);\n                setCharacters([...dataDelete]);\n                setErrorMessages([])\n            })\n            .catch(error => {\n                setErrorMessages([\"Delete failed! Server error\"])\n                setIserror(true)\n            })\n    }\n\n    useEffect(() => {\n        ApiClient.get(\"/characters/\")\n            .then(res => {\n                setCharacters(res.data.characters)\n            })\n            .catch(error => {\n                setErrorMessages([\"Cannot load character data\"])\n                setIserror(true)\n            })\n    }, [])\n\n    var columns = [\n        { title: \"id\", field: \"id\", hidden: true },\n        { title: \"Character name\", field: \"name\" },\n    ]\n\n    return (\n        <div className=\"App\">\n            <Grid container spacing={1}>\n                <Grid item xs={2}></Grid>\n                <Grid item xs={12} sm={8}>\n                    <div>\n                        {iserror &&\n                            <Alert severity=\"error\">\n                                {errorMessages.map((msg, i) => {\n                                    return <div key={i}>{msg}</div>\n                                })}\n                            </Alert>\n                        }\n                    </div>\n                    <MaterialTable\n                        title=\"Your Characters\"\n                        columns={columns}\n                        data={characters}\n                        editable={{\n                            onRowAdd: (newData) =>\n                                new Promise((resolve) => {\n                                    handleRowAdd(newData)\n                                    resolve()\n                                }),\n                            onRowDelete: (oldData) =>\n                                new Promise((resolve) => {\n                                    handleRowDelete(oldData, resolve)\n                                    resolve()\n                                }),\n                        }}\n                        options={{\n                            actionsColumnIndex: -1,\n                            paging: false,\n                            search: false\n                        }}\n                    />\n                </Grid>\n                <Grid item xs={3}>\n\n                </Grid>\n            </Grid >\n        </div >\n    )\n}","import createAuthRefreshInterceptor from 'axios-auth-refresh';\nimport { Button } from '@material-ui/core';\nimport { useContext, useEffect } from 'react';\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\n\nimport ApiClient from './api-client'\nimport AuthContext from './authcontext.js'\n\nexport default function AuthButton() {\n    const { setLoggedIn } = useContext(AuthContext)\n    useEffect(() => {\n        let mounted = true;\n        const token = localStorage.getItem('authToken');\n        if (token === null) {\n            if (mounted) {\n                setLoggedIn(false)\n            }\n        } else {\n            if (mounted) {\n                setLoggedIn(true)\n            }\n        }\n\n        return () => mounted = false;\n    }, [setLoggedIn])\n\n\n    // Function that will be called to refresh authorization\n    const refreshAuthLogic = failedRequest => ApiClient.get('/refresh').then(tokenRefreshResponse => {\n        localStorage.setItem('authToken', tokenRefreshResponse.data.token);\n        ApiClient.defaults.headers.Authorization = \"Bearer \" + tokenRefreshResponse.data.token;\n        failedRequest.response.config.headers['Authorization'] = 'Bearer ' + tokenRefreshResponse.data.token;\n        return Promise.resolve();\n    });\n\n    // Instantiate the interceptor (you can chain it as it returns the axios instance)\n    createAuthRefreshInterceptor(ApiClient, refreshAuthLogic);\n\n    const onFailure = (response) => {\n        console.log(response);\n    }\n\n    const onLoginSuccess = (response) => {\n        ApiClient.post(\"/login\", { token: response.tokenObj.id_token })\n            .then(res => {\n                window.localStorage.setItem('authToken', res.data.token);\n                ApiClient.defaults.headers.Authorization = \"Bearer \" + res.data.token;\n                setLoggedIn(true)\n            })\n            .catch(error => {\n                console.log(\"Authentication failed\")\n            })\n    }\n\n    const onLogoutSuccess = (response) => {\n        window.localStorage.removeItem('authToken')\n        setLoggedIn(false)\n    }\n    return (\n        <AuthContext.Consumer>\n            {({ loggedIn }) => (\n                <div>\n                    { loggedIn ?\n                        <GoogleLogout\n                            clientId=\"1090301103642-op1uhu99i3naegpk86siaqqf4nddn0c1.apps.googleusercontent.com\"\n                            buttonText='Logout'\n                            onLogoutSuccess={onLogoutSuccess}\n                            onFailure={onFailure}\n                            render={renderProps => (\n                                <Button\n                                    variant=\"contained\"\n                                    onClick={renderProps.onClick}\n                                    disabled={renderProps.disabled}\n                                >Logout</Button>\n                            )}\n                            theme=\"dark\"\n                        />\n                        : <GoogleLogin\n                            clientId=\"1090301103642-op1uhu99i3naegpk86siaqqf4nddn0c1.apps.googleusercontent.com\"\n                            buttonText=\"Login\"\n                            onSuccess={onLoginSuccess}\n                            onFailure={onFailure}\n                            cookiePolicy={'single_host_origin'}\n                            isSignedIn={true}\n                            theme=\"dark\"\n                        />\n                    }\n                </div>\n            )}\n        </AuthContext.Consumer>\n    )\n}\n","import { AppBar, Toolbar, Typography } from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport AuthButton from \"./authbutton\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    title: {\n        flexGrow: 1,\n    },\n}));\n\nexport default function Header() {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        Handy Haversack\n                    </Typography>\n                    <AuthButton />\n                </Toolbar>\n            </AppBar>\n        </div>\n    )\n}\n","import { useState, useEffect } from 'react';\nimport { makeStyles, TextField, Typography } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport ApiClient from '../api-client'\n\nconst useStyles = makeStyles((_) => ({\n    mergecard: {\n        flexDirection: \"column\",\n        height: \"100%\",\n    },\n    costText: {\n        paddingTop: '10px',\n    }\n}));\n\nexport default function CharacterCard(props) {\n    const classes = useStyles();\n\n    const { costTotal, onChange } = props\n    const [characters, setCharacters] = useState([])\n    const [selected, setSelected] = useState({})\n\n    const getCharacters = () => {\n        ApiClient.get(\"/characters/\")\n            .then(res => {\n                setCharacters(res.data.characters)\n                if (res.data.characters.length > 0) {\n                    setSelected(res.data.characters[0])\n                }\n            })\n            .catch(error => {\n                console.log(\"Cannot load character names\")\n            })\n    }\n\n    // When the selected value is updated, alert the parent\n    useEffect(() => {\n        onChange(selected)\n    }, [selected, onChange])\n\n    // On init load the characters\n    useEffect(() => {\n        getCharacters()\n    }, [])\n\n    return (\n        <div className={classes.mergecard}>\n                <Autocomplete\n                    id=\"character-selection\"\n                    value={selected}\n                    options={characters}\n                    getOptionLabel={(option) => option.name}\n                    onChange={(_, value) => { setSelected(value) }}\n                    renderInput={(params) => <TextField {...params} label=\"Character\" variant=\"outlined\" />}\n                />\n                <Typography variant=\"h6\" className={classes.costText}>\n                    Inventory Cost: {costTotal} gp\n                </Typography>\n        </div>\n    )\n}","import MaterialTable from \"@material-table/core\";\n\n\nexport default function ConsumedTable(props) {\n    const { consumed, removeItem, columns } = props\n\n    const onRemove = (oldData, consumed) => {\n        removeItem(oldData, consumed)\n    }\n    return (\n        <MaterialTable\n            title=\"Consumed Items\"\n            columns={columns}\n            data={consumed}\n            actions={[\n                {\n                    icon: 'restore',\n                    tooltip: 'Undo consume',\n                    onClick: (_, rowData) => new Promise((resolve) => {\n                        onRemove(rowData, true)\n                        resolve()\n                    }),\n                }\n            ]}\n            options={{\n                actionsColumnIndex: -1,\n                paging: false,\n                rowStyle: (rowData, index) => {\n                    if (index % 2) {\n                        return { backgroundColor: \"#333333\" }\n                    }\n                },\n                search: false,\n            }}\n        />\n    )\n}","import { useState, useEffect } from 'react';\nimport { Button, makeStyles, TextField } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport ApiClient from '../api-client'\n\nconst useStyles = makeStyles((_) => ({\n    outerCard: {\n        flexDirection: \"column\",\n        height: \"100%\",\n    },\n    itemDropdown: {\n        paddingBottom: \"10px\",\n    }\n}));\n\nexport default function BuyItemCard(props) {\n    const classes = useStyles();\n    const [items, setItems] = useState([])    // Item data for predicting item fill\n    const [selected, setSelected] = useState({})\n\n    const buyItem = () => {\n        props.buyItem(selected)\n    }\n\n    useEffect(() => {\n        ApiClient.get(\"/names/\")\n            .then(res => {\n                setItems(res.data.items)\n            })\n            .catch(error => {\n                console.log(\"Cannot load item names\")\n            })\n    }, [])\n\n    return (\n        <div className={classes.outerCard}>\n            <Autocomplete\n                className={classes.itemDropdown}\n                options={items}\n                getOptionLabel={(option) => option.Name}\n                onChange={(_, value) => { setSelected(value) }}\n                renderInput={(params) => <TextField {...params} label=\"Item to buy\" variant=\"outlined\" />}\n            />\n            <Button variant=\"contained\"\n                onClick={buyItem}>\n                Buy Item\n                </Button>\n        </div>\n    )\n}","import MaterialTable from \"@material-table/core\";\nimport { useTheme } from '@material-ui/core/styles';\n\nexport default function Table(props) {\n    const { owned, removeItem, columns } = props\n    const theme = useTheme();\n\n    const onRemove = (oldData, consumed) => {\n        removeItem(oldData, consumed)\n    }\n    return (\n        <MaterialTable\n            title=\"Owned Items\"\n            columns={columns}\n            data={owned}\n            editable={{\n                onRowDelete: (oldData) =>\n                    new Promise((resolve) => {\n                        onRemove(oldData, false)\n                        resolve()\n                    }),\n            }}\n            actions={[\n                {\n                    icon: 'emoji_food_beverage',\n                    tooltip: 'Consume',\n                    onClick: (_, rowData) => new Promise((resolve) => {\n                        onRemove(rowData, true)\n                        resolve()\n                    }),\n                }\n            ]}\n            options={{\n                actionsColumnIndex: -1,\n                paging: false,\n                rowStyle: (rowData, index) => {\n                    if ((index + 1) % 2) {\n                        return { backgroundColor: theme.palette.action.hover }\n                    }\n                },\n                search: false,\n            }}\n        />\n    )\n}","import { useState, useEffect } from 'react';\nimport { Grid, Hidden } from '@material-ui/core/';\nimport Alert from '@material-ui/lab/Alert';\n\nimport ApiClient from '../api-client'\nimport CharacterCard from './character-card'\nimport ConsumedTable from './consumed-table'\nimport BuyItemCard from './buy-item-card';\nimport Table from './table';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\n\n\nexport default function InventoryPage() {\n    const [owned, setOwned] = useState([]); // owned items\n    const [consumed, setConsumed] = useState([]); // consumed items\n    const [character, setCharacter] = useState({})\n    const [costTotal, setCostTotal] = useState(0)\n\n    //for error handling\n    const [iserror, setIserror] = useState(false)\n    const [errorMessages, setErrorMessages] = useState([])\n\n    // Validates that a character is selected\n    const validateCharacter = () => {\n        console.log(\"Character: \", character)\n        if (character === null || (character.constructor === Object && Object.keys(character).length === 0)) {\n            setErrorMessages([\"Please select a character. If you have no characters, add one in the Characters tab\"])\n            setIserror(true)\n            return false\n        }\n        return true\n    }\n\n    // Handles buying an item\n    const buyItem = (item) => {\n        if (Object.keys(item).length === 0 && item.constructor === Object) {\n            setErrorMessages([\"Please Select an Item\"])\n            setIserror(true)\n            return\n        }\n        if (!validateCharacter()) {\n            return\n        }\n        var payload = {\n            \"character_id\": character.id,\n            \"item_id\": item.ID\n        }\n        // Buy the selected item\n        ApiClient.post(\"/buy/\", payload)\n            .then(res => {\n                setOwned(res.data.owned)\n                setConsumed(res.data.consumed)\n                setCostTotal(res.data.cost)\n                setIserror(false)\n            }).catch(error => {\n                setErrorMessages([\"Cannot Buy Item\"])\n                setIserror(true)\n            })\n    }\n\n    // Handles selling an item\n    const removeItem = (oldData, consume) => {\n        var payload = {\n            \"character_id\": oldData.character_id,\n            \"item_id\": oldData.item_id\n        }\n        ApiClient.post(consume ? \"/consume/\" : \"/sell/\", payload)\n            .then(res => {\n                setOwned(res.data.owned)\n                setConsumed(res.data.consumed)\n                setCostTotal(res.data.cost)\n                setIserror(false)\n            })\n            .catch(error => {\n                setErrorMessages([\"Delete failed! Server error\", error.error])\n                setIserror(true)\n            })\n    }\n\n    const unconsumeItem = (oldData, consume) => {\n        var payload = {\n            \"character_id\": oldData.character_id,\n            \"item_id\": oldData.item_id\n        }\n        ApiClient.post(\"/unconsume/\", payload)\n            .then(res => {\n                setOwned(res.data.owned)\n                setConsumed(res.data.consumed)\n                setCostTotal(res.data.cost)\n                setIserror(false)\n            })\n            .catch(error => {\n                setErrorMessages([\"Delete failed! Server error\", error.error])\n                setIserror(true)\n            })\n    }\n\n    // Update the inventory when a character is selected\n    useEffect(() => {\n        let mounted = true\n        if (mounted) {\n            if (!validateCharacter()) {\n                return\n            }\n        }\n        ApiClient.get(\"/inventory/\" + character.id)\n            .then(res => {\n                if (mounted) {\n                    setOwned(res.data.owned)\n                    setConsumed(res.data.consumed)\n                    setCostTotal(res.data.cost)\n                    setIserror(false)\n                }\n            })\n            .catch(error => {\n                if (mounted) {\n                    setErrorMessages([\"Cannot load inventory data\"])\n                    setIserror(true)\n                }\n            })\n\n        return () => mounted = false;\n    }, [character])\n\n    // Columns used in the tables\n    const theme = useTheme();\n    var sizeMatches = useMediaQuery(theme.breakpoints.down(\"xs\"))\n    const Columns = [\n        { title: \"id\", field: \"id\", hidden: true },\n        { title: \"user_id\", field: \"user_id\", hidden: true },\n        { title: \"item_id\", field: \"user_id\", hidden: true },\n        { title: \"Name\", field: \"Item.name\" },\n        { title: \"Rarity\", field: \"Item.rarity\", hidden: sizeMatches },\n        {\n            title: \"Cost\",\n            field: \"Item.cost\",\n            type: \"numeric\",\n            cellStyle: { padding: 1 },\n            headerStyle: { padding: 1 },\n\n        },\n        { title: \"Qty\", field: \"count\", type: \"numeric\", },\n    ]\n\n    return (\n        <div className=\"App\">\n            <Grid container spacing={1}>\n                <Hidden smDown>\n                    <Grid item md={2} />\n                </Hidden>\n                <Grid item xs={12} sm={6} md={4}>\n                    <CharacterCard\n                        onChange={setCharacter}\n                        costTotal={costTotal} />\n                </Grid>\n                <Grid item xs={12} sm={6} md={4}>\n                    <BuyItemCard\n                        buyItem={buyItem} />\n                </Grid>\n                <Hidden smDown>\n                    <Grid item md={1} />\n                    <Grid item md={2} />\n                </Hidden>\n                <Grid item xs={12} md={8}>\n                    <div>\n                        {iserror &&\n                            <Alert severity=\"error\">\n                                {errorMessages.map((msg, i) => {\n                                    return <div key={i}>{msg}</div>\n                                })}\n                            </Alert>\n                        }\n                    </div>\n                    <Table\n                        owned={owned}\n                        removeItem={removeItem}\n                        columns={Columns} />\n                </Grid>\n                <Hidden smDown>\n                    <Grid item md={1}></Grid>\n                    <Grid item md={2} />\n                </Hidden>\n                <Grid item xs={12} md={8}>\n                    <ConsumedTable\n                        consumed={consumed}\n                        removeItem={unconsumeItem}\n                        columns={Columns} />\n                </Grid>\n            </Grid >\n        </div >\n    )\n}","import { MTableToolbar } from \"@material-table/core\";\nimport { Grid, makeStyles, Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles((_) => ({\n    title: {\n        paddingLeft: '20px',\n        paddingTop: '10px'\n    },\n}));\n\nexport default function Toolbar(props) {\n    const classes = useStyles();\n\n    return (\n        <div>\n            <Grid container spacing={1}>\n                <Grid item xs={12} sm={6} >\n                    <Typography variant=\"h6\" className={classes.title}>Campaign Items</Typography>\n                </Grid>\n                <Grid item xs={12} sm={6} >\n                    <MTableToolbar {...props} />\n                </Grid>\n            </Grid>\n        </div>\n    )\n}","import MaterialTable from \"@material-table/core\";\nimport { Grid, Hidden, TextField, Typography } from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\nimport { useState, useEffect } from 'react';\n\nimport AuthContext from '../authcontext'\nimport ApiClient from '../api-client'\nimport Toolbar from './toolbar'\n\nexport default function ItemTable() {\n    const [items, setItems] = useState([]);\n    const [displayError, setDisplayError] = useState(false)\n    const [errorMessages, setErrorMessages] = useState([])\n\n    const handleRowAdd = (newItem, resolve) => {\n        //validation\n        let errorList = []\n        if (newItem.name === undefined) {\n            errorList.push(\"Please enter item name\")\n        } if (newItem.type === undefined) {\n            errorList.push(\"Please enter item type\")\n        } if (newItem.rarity === undefined) {\n            errorList.push(\"Please enter rarity\")\n        } if (newItem.cost === undefined || newItem.cost < 0) {\n            errorList.push(\"Please enter a proper cost\")\n        } if (errorList.length < 1) {\n            ApiClient.post(\"/items\", newItem)\n                .then(res => {\n                    setItems(items.concat(res.data.data));\n                    setDisplayError(false)\n                })\n                .catch(error => {\n                    setErrorMessages([\"Cannot add data. Server error!\"])\n                    setDisplayError(true)\n                })\n        } else {\n            setErrorMessages(errorList)\n            setDisplayError(true)\n        }\n    }\n\n    const handleRowDelete = (oldData, resolve) => {\n        ApiClient.delete(\"/items/\" + oldData.id)\n            .then(res => {\n                setItems(items.filter((item) => item.id !== oldData.id));\n            })\n            .catch(error => {\n                setErrorMessages([\"Delete failed! Server error\"])\n                setDisplayError(true)\n            })\n    }\n\n    const handleRowUpdate = (newData, oldData, resolve) => {  //validation\n        let errorList = []\n        if (newData.name === undefined || newData.name === \"\") {\n            errorList.push(\"Please enter item name\")\n        } if (newData.type === undefined || newData.type === \"\") {\n            errorList.push(\"Please enter item type\")\n        } if (newData.rarity === undefined || newData.rarity === \"\") {\n            errorList.push(\"Please enter rarity\")\n        } if (newData.cost === undefined || newData.cost < 0 || isNaN(newData.cost)) {\n            errorList.push(\"Please enter a proper cost\")\n        }\n        console.log(newData.cost)\n        if (errorList.length < 1) {\n            ApiClient.patch(\"/items/\" + newData.id, newData)\n                .then(res => {\n                    const dataUpdate = [...items];\n                    const index = oldData.tableData.id;\n                    dataUpdate[index] = newData;\n                    setItems([...dataUpdate]);\n                    setDisplayError(false)\n                    setErrorMessages([])\n                })\n                .catch(error => {\n                    setErrorMessages([\"Update failed! Server error\"])\n                    setDisplayError(true)\n                })\n        } else {\n            setErrorMessages(errorList)\n            setDisplayError(true)\n        }\n    }\n\n    useEffect(() => {\n        ApiClient.get(\"/items\")\n            .then(res => {\n                setItems(res.data.items)\n            })\n            .catch(error => {\n                setErrorMessages([\"Cannot load item data\", error.error])\n                setDisplayError(true)\n            })\n    }, [])\n\n    var columns = [\n        { title: \"id\", field: \"id\", hidden: true },\n        {\n            title: \"Name\", field: \"name\",\n            render: rowData => (\n                <div>{rowData.name} <br />\n                    <Typography variant=\"caption\" display=\"block\" gutterBottom>{rowData.type}</Typography>\n                </div>\n            ),\n            validate: (rowData) => {\n                if (rowData.name === '') {\n                    return 'Type cannot be empty'\n                }\n                return ''\n            },\n            editComponent: (props) => {\n                return (\n                    <div>\n                        <TextField\n                            label=\"Name\"\n                            size=\"xsmall\"\n                            defaultValue={props.value}\n                            placeholder=\"Name\"\n                            onChange={(e) => props.onChange(e.target.value)}\n                        />\n                        <TextField\n                            label=\"Type\"\n                            size=\"small\"\n                            defaultValue={props.rowData.type}\n                            placeholder=\"Type\"\n                            onChange={(e) => props.rowData.type = e.target.value}\n                        />\n                    </div>\n\n                );\n            },\n\n        },\n        { title: \"Type\", field: \"type\", hidden: true },\n        { title: \"Rarity\", field: \"rarity\", },\n        { title: \"Cost\", field: \"cost\", type: \"numeric\" }\n    ]\n\n    return (\n        <Grid container spacing={1}>\n            <Hidden smDown>\n                <Grid item md={2} />\n            </Hidden>\n            <Grid item xs={12} md={8}>\n                <div>\n                    {displayError &&\n                        <Alert severity=\"error\">\n                            {errorMessages.map((msg, i) => {\n                                return <div key={i}>{msg}</div>\n                            })}\n                        </Alert>\n                    }\n                </div>\n                <AuthContext.Consumer>\n                    {({ loggedIn }) => (\n                        <MaterialTable\n                            title=\"Defined Items\"\n                            columns={columns}\n                            data={items}\n                            editable={{\n                                onRowUpdate: loggedIn ? (newData, oldData) =>\n                                    new Promise((resolve) => {\n                                        handleRowUpdate(newData, oldData, resolve);\n                                        resolve()\n                                    }) : null,\n                                onRowAdd: loggedIn ? (newData) =>\n                                    new Promise((resolve) => {\n                                        handleRowAdd(newData)\n                                        resolve()\n                                    }) : null,\n                                onRowDelete: loggedIn ? (oldData) =>\n                                    new Promise((resolve) => {\n                                        handleRowDelete(oldData, resolve)\n                                        resolve()\n                                    }) : null,\n                            }}\n                            options={{\n                                actionsColumnIndex: -1,\n                                header: true,\n                                pageSize: 10,\n                                pageSizeOptions: [10, 25, 50,],\n                                showTitle: false,\n                            }}\n                            components={{\n                                Toolbar: props => (\n                                    <Toolbar {...props} />\n                                ),\n                            }}\n                        />\n                    )}\n                </AuthContext.Consumer>\n            </Grid>\n            <Hidden smDown>\n                <Grid item md={8} />\n            </Hidden>\n        </Grid >\n    )\n}","import { Paper, Tabs, Tab } from '@material-ui/core';\n\nimport AuthContext from './authcontext'\n\nexport default function TabBar(props) {\n    const { value, setValue } = props\n    const handleChange = (_, newValue) => {\n        setValue(newValue);\n    };\n\n    return (\n        <Paper square>\n            <AuthContext.Consumer>\n                {({ loggedIn }) => (\n                    <Tabs\n                        value={value}\n                        onChange={handleChange}\n                        centered>\n                        <Tab label=\"Items\" />\n                        <Tab label=\"Inventory\" disabled={!loggedIn} />\n                        <Tab label=\"Characters\" disabled={!loggedIn} />\n                    </Tabs>\n                )}\n            </AuthContext.Consumer>\n        </Paper>\n    )\n}","import { Box } from '@material-ui/core';\n\nexport default function TabPanel(props) {\n    const { children, value, index, ...other } = props;\n    return (\n        <div {...other}>\n            {value === index && <Box p={3}>{children}</Box>}\n        </div>\n    );\n}","import { CssBaseline, ThemeProvider } from '@material-ui/core';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { useContext, useEffect, useState } from 'react';\n\nimport AuthContext from './components/authcontext'\n\nimport CharacterTable from './components/character-table';\nimport Header from './components/header'\nimport InventoryPage from './components/inventory/page';\nimport ItemTable from './components/itemtable/itemtable';\nimport TabBar from './components/tab-bar';\nimport TabPanel from './components/tab-panel';\n\nconst theme = createMuiTheme({\n    palette: {\n        type: 'dark',\n    },\n});\n\ntheme.shadows = []\n\nexport default function App() {\n    const [value, setValue] = useState(0);\n    const { loggedIn } = useContext(AuthContext)\n\n    // Return to the items tab if logged out\n    useEffect(() => {\n        if (!loggedIn) {\n            setValue(0)\n        }\n    }, [loggedIn])\n\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline />\n            <Header />\n            <TabBar value={value} setValue={setValue} />\n            <TabPanel value={value} index={0}>\n                <ItemTable />\n            </TabPanel>\n            <TabPanel value={value} index={1}>\n                <InventoryPage />\n            </TabPanel>\n            <TabPanel value={value} index={2}>\n                <CharacterTable />\n            </TabPanel>\n        </ThemeProvider>\n    )\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useState } from 'react'\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport AuthContext from './components/authcontext'\n\nconst AppWrapper = () => {\n  const [loggedIn, setLoggedIn] = useState(false)\n\n  return (\n    <AuthContext.Provider value={{ loggedIn, setLoggedIn }}>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </AuthContext.Provider>\n  )\n}\n\nReactDOM.render(\n  <AppWrapper />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}